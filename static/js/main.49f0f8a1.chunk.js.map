{"version":3,"sources":["components/utils/images/logo.png","components/queries.js","components/SeenCards.jsx","components/Card.jsx","components/CardHolder.jsx","components/Button.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","GET_RANDOM_CHARACTER","gql","_templateObject","SeenCards","_ref","seen","onClick","characters","Object","toConsumableArray","values","react_default","a","createElement","className","style","maxHeight","overflowY","map","c","key","_id","Math","random","cursor","src","image","alt","name","slice","length","Card","props","character","objectSpread","maxWidth","keys","i","CardHolder","logo","Button","client","type","App","state","Map","current","handleCardUpdate","_callee","_ref2","_current","regenerator_default","wrap","_context","prev","next","_this","query","variables","fetchPolicy","sent","data","has","get","abrupt","setState","set","toString","stop","handleCardSelect","id","handleSeenCardsRender","Fragment","role","aria-label","components_SeenCards","_this2","this","_this$state","react_apollo_esm","components_CardHolder","components_Card","components_Button","Component","ApolloClient","uri","cache","InMemoryCache","addTypename","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.49f0f8a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.700ea584.png\";","import { gql } from \"apollo-boost\";\n\nconst GET_RANDOM_CHARACTER = gql`\n  query($_id: ID) {\n    character(_id: $_id) {\n      _id\n      name\n      status\n      species\n      gender\n      origin {\n        name\n      }\n      location {\n        name\n      }\n      image\n    }\n  }\n`;\n\nexport { GET_RANDOM_CHARACTER };\n","import React from \"react\";\n\nconst SeenCards = ({ seen, onClick }) => {\n  const characters = [...seen.values()];\n  return (\n    <ul\n      className='list-group'\n      style={{ maxHeight: \"500px\", overflowY: \"scroll\" }}\n    >\n      {characters.map(c => (\n        <li\n          key={c._id + Math.random()}\n          className='list-group-item d-flex justify-content-between align-items-center'\n          style={{ maxHeight: \"40px\", cursor: \"pointer\" }}\n          onClick={() => onClick(c._id)}\n        >\n          <img src={c.image} alt='img' style={{ maxHeight: \"40px\" }} />\n          {c.name}\n          <span className='badge badge-info badge-pill'>\n            {c._id.slice(c._id.length - 3)}\n          </span>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default SeenCards;\n","import React from \"react\";\n\nconst Card = props => {\n  const character = { ...props.character };\n  return (\n    <div className='card mb-3'>\n      <div className='row no-gutters'>\n        <div className='col-md-5'>\n          <img\n            style={{ maxHeight: \"300px\", maxWidth: \"300px\" }}\n            src={character && character.image}\n            className='card-img'\n            alt='loading...'\n          />\n        </div>\n        <div className='col-md-7 p-3'>\n          <h5 className='card-title d-flex justify-content-between mb-0'>\n            <u>{character && character.name}</u>\n            <span className='badge badge-pill badge-info'>\n              {character._id.slice(character._id.length - 3)}\n            </span>\n          </h5>\n          {/* get rid of unnecessary attributes */}\n          {delete character.image &&\n            delete character.name &&\n            delete character._id}\n          <div\n            className='card-body'\n            style={{ maxHeight: \"200px\", overflowY: \"scroll\" }}\n          >\n            <div className='card-text'>\n              <ul className='list-group list-group-flush'>\n                {character &&\n                  Object.keys(character).map((key, i) => (\n                    <li key={i} className='list-group-item'>\n                      {key}:{\" \"}\n                      {(character[key] && character[key].name) ||\n                        character[key]}\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport logo from \"./utils/images/logo.png\";\n\nconst CardHolder = () => {\n  return (\n    <div className='card mb-3'>\n      <div className='row no-gutters'>\n        <div className='col-md-5'>\n          <img\n            style={{ maxHeight: \"300px\", maxWidth: \"300px\" }}\n            src={logo && logo}\n            className='card-img p-4 my-5'\n            alt='loading...'\n          />\n        </div>\n        <div className='col-md-7 p-3'>\n          <h5 className='card-title d-flex justify-content-between mb-0'>\n            <u>The Rick and Morty Encyclop√¶dia</u>\n          </h5>\n          <div\n            className='card-body'\n            style={{ maxHeight: \"200px\", overflowY: \"scroll\" }}\n          >\n            <div className='card-text'>\n              Have fun trying to find the 493 characters available from the R&M\n              verse in this amazing and informative web app powered by the Rick\n              and Morty API. Click on the button to get started.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CardHolder;\n","import React from \"react\";\n\nconst Button = ({ onClick, client }) => {\n  return (\n    <button\n      onClick={() => onClick(client)}\n      type='button'\n      className='btn btn-info'\n    >\n      NEW CHARACTER\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport { GET_RANDOM_CHARACTER } from \"./components/queries\";\nimport SeenCards from \"./components/SeenCards\";\nimport Card from \"./components/Card\";\nimport CardHolder from \"./components/CardHolder\";\nimport Button from \"./components/Button\";\nimport { ApolloConsumer } from \"react-apollo\";\n\nclass App extends Component {\n  state = {\n    seen: new Map(),\n    current: {}\n  };\n\n  render() {\n    const { current, seen } = this.state;\n    return (\n      <ApolloConsumer>\n        {client => (\n          <div className='App'>\n            <div className='container'>\n              <div className='row'>\n                <div className='col-5'>{this.handleSeenCardsRender(seen)}</div>\n                <div className='col-7'>\n                  {Object.keys(current).length === 0 && <CardHolder />}\n                  {Object.keys(current).length > 0 && (\n                    <Card character={current || {}} />\n                  )}\n                  <Button onClick={this.handleCardUpdate} client={client} />\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </ApolloConsumer>\n    );\n  }\n\n  handleCardUpdate = async client => {\n    const seen = new Map(this.state.seen);\n\n    const {\n      data: { character: current }\n    } = await client.query({\n      query: GET_RANDOM_CHARACTER,\n      variables: { _id: \"\" },\n      fetchPolicy: \"network-only\"\n    });\n\n    const { _id } = current;\n    if (seen.has(_id)) {\n      const current = seen.get(_id);\n      //If info has been already requested, there's no need to query again\n      return this.setState({ current }); // card was already fetched\n    }\n\n    seen.set(current._id.toString(), current); //add to map\n    return this.setState({ seen, current });\n  };\n\n  handleCardSelect = id => {\n    const { seen } = this.state;\n    const current = { ...seen.get(id.toString()) };\n\n    return this.setState({ current });\n  };\n\n  handleSeenCardsRender = seen => {\n    return (\n      <React.Fragment>\n        <h6>\n          Have you seen them all?{\" \"}\n          <span role='img' aria-label='eyes'>\n            üëÄ\n          </span>\n        </h6>\n        <SeenCards seen={seen} onClick={this.handleCardSelect} />\n      </React.Fragment>\n    );\n  };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient, { InMemoryCache } from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst client = new ApolloClient({\n  uri: \"http://174.138.41.192:4000/graphql\",\n  cache: new InMemoryCache({\n    addTypename: false\n  })\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}